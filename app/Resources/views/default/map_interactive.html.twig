
{% extends 'base.html.twig' %}
{% block title %}
    Carte Interactive
{% endblock %}

{% block content %}    


<body onload="init();">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==" crossorigin=""/>
    <link rel="stylesheet" href="{{asset('js/leaflet-toolbar/dist/leaflet.toolbar.css')}}"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />

    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js" integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA==" crossorigin=""></script>
    <script src="{{asset('js/leaflet-toolbar/dist/leaflet.toolbar.js')}}"></script>
    {# <script src="{{asset('js/leaflet-draw-toolbar/dist/leaflet.draw-toolbar.js')}}"></script> #}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <div id="mapid"></div>

    <script>
        function init(){
            var mymap = L.map('mapid',{
                zoomControl:false
            });
            longitude = 2.43896484375;
            latitude = 46.52863469527167;
            echelle = 6;

            mymap.setView([latitude, longitude], echelle);
            L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(mymap);

            var drawnItems = new L.FeatureGroup();
            mymap.addLayer(drawnItems);

            //Toolbar Visible
            L.drawLocal.draw.toolbar.buttons.polyline = 'Créer un parcours';
            L.drawLocal.draw.toolbar.buttons.marker = 'Ajouter un point d\'intérêt';
            L.drawLocal.edit.toolbar.buttons.editDisabled = "Aucun élément à éditer";
            L.drawLocal.edit.toolbar.buttons.removeDisabled = "Aucun élément à supprimer";

            //Toolbar Visible Element Placé
            L.drawLocal.edit.toolbar.buttons.edit = "Editer parcours/points";
            L.drawLocal.edit.toolbar.buttons.remove = "Supprimer parcours/points";

            //Toolbar Polyline
            L.drawLocal.draw.toolbar.actions.text = "Annuler";
            L.drawLocal.draw.toolbar.actions.title = "Annuler";
            L.drawLocal.draw.toolbar.finish.text = "Terminer";
            L.drawLocal.draw.toolbar.finish.title = "Terminer la création du parcours";
            L.drawLocal.draw.toolbar.undo.text = "Supprimer le dernier point";
            L.drawLocal.draw.toolbar.undo.title = "Supprimer le dernier point dessiné";

            //Toolbar Polyline Texte Carte
            L.drawLocal.draw.handlers.polyline.tooltip.start = 'Cliquer sur la carte pour positionner le point de départ';
            L.drawLocal.draw.handlers.polyline.tooltip.cont = 'Cliquer sur la carte pour continuer le tracé';
            L.drawLocal.draw.handlers.polyline.tooltip.end = 'Cliquer sur le dernier point pour finaliser le parcours';

            //Toolbar Marker Texte
            L.drawLocal.draw.handlers.marker.tooltip.start = 'Cliquer sur la carte pour placer un point d\'intérêt';

            //Toolbar Edition
            L.drawLocal.edit.toolbar.actions.cancel.text = "Annuler";
            L.drawLocal.edit.toolbar.actions.cancel.title = "Annuler les derniers changements";
            L.drawLocal.edit.toolbar.actions.save.text = "Sauvegarder";
            L.drawLocal.edit.toolbar.actions.save.title = "Sauvegarder les changements";
            
            //Toolbar Edition Texte
            L.drawLocal.edit.handlers.edit.tooltip.text = "Maintenir un élément pour le déplacer";
            L.drawLocal.edit.handlers.edit.tooltip.subtext = "Retirer un point de passage en double-cliquant dessus";
            
            //Toolbar Suppression
            L.drawLocal.edit.toolbar.actions.clearAll.text = "Tout supprimer";
            L.drawLocal.edit.toolbar.actions.clearAll.title = "Supprimer tous les éléments sur la carte";

            //Toolbar Suppression Texte
            L.drawLocal.edit.handlers.remove.tooltip.text = "Cliquez sur un élément pour le supprimer";

            //Toolbar Zoom
            var zoomControl = new L.control.zoom({
                zoomInTitle: "Zoomer",
                zoomOutTitle: "Dézoomer"
            });

            /*var osmGeocoder = new L.Control.OSMGeocoder({
                position:'topright',
                collapsed:false
            });
            mymap.addControl(osmGeocoder);*/

            L.Control.geocoder().addTo(mymap);

            mymap.addControl(zoomControl);

            var drawControl = new L.Control.Draw({
                position:'topleft',
                edit: {
                    featureGroup: drawnItems,
                    remove:true
                },
                draw: {
                    polyline: {
                        shapeOptions: {
                            color: 'orange',
                            weight: 10,
                        }
                    },
                    circle: false,
                    polygon: false,
                    marker: {
                        repeatMode:true
                    },
                    circlemarker: false,
                    rectangle: false,
                },
            });
            //console.log(mymap);
            //console.log(L.drawLocal);
            console.log(drawControl);

            mymap.addControl(drawControl);

            var editableLayers = new L.FeatureGroup();
            mymap.addLayer(editableLayers);

            mymap.on('draw:created', function(e) {
                var type = e.layerType,
                    layer = e.layer;
                    //console.log(layer);

                if (type === 'polyline') {
                    drawnItems.addLayer(layer);
                    console.log(e.layer.editing.latlngs[0])
                    //console.log(e.layer.editing.latlngs[0][0]);
                }
                else if ( type === 'polygon') {
                    drawnItems.addLayer(layer);
                }
                else if (type === 'marker') {
                    drawnItems.addLayer(layer);
                }
                else if (type === 'circlemarker') {
                    drawnItems.addLayer(layer);
                }
                else if (type === 'circle') {
                    drawnItems.addLayer(layer);
                }
                else if (type === 'rectangle') {
                    drawnItems.addLayer(layer);
                }
                editableLayers.addLayer(layer);
            });
/*
            mymap.on('draw:edited', function(e) {
                var type = e.layerType,
                    layer = e.layer;
                    drawnItems.addLayer(layer);
                    editableLayers.addLayer(layer);
            });
*/
            var positionUser = function() {
                if(navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);
                }
                else {
                    alert("La localisation n'est pas disponible avec votre navigateur !");
                }
            }

            var showPosition = function(position) {
                latitude = position.coords.latitude;
                longitude = position.coords.longitude;
                echelle = 18;

                mymap.setView([latitude, longitude], echelle);
                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(mymap);

                var latlng = [latitude, longitude];
                var marker = L.marker([latitude, longitude]).addTo(mymap);
                var popup = L.popup().setLatLng(latlng).setContent('<p>Vous êtes ici<br>Latitude: '+ latitude +'<br>Longitude: '+longitude+'</p>').openOn(mymap);
                marker.bindPopup(popup).openPopup();
                
            }
            positionUser();
        }
    </script>

</body>
{% endblock %}
