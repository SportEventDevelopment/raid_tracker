{% extends 'base.html.twig' %}

{% block javascripts %}    
        {{ parent() }}
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
{% endblock %}

{% block content %}
<div class="container">
        {% for message in app.flashes('success') %}
                <div class="alert alert-success" role="alert">
                        {{ message }}
                </div>
        {% endfor %}
        {% for message in app.flashes('error') %}
                <div class="alert alert-danger" role="alert">
                        {{ message }}
                </div>
        {% endfor %}
        
        <h2>Description du RAID : {{raid.nom}}</h2>
        {% if posteRepartis %}
                <h3>Vous êtes affectés aux postes suivants</h3>
                <ul class="list-group">
                {% for repartition in all_repartitions %}
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                        Poste : {{ repartition.idPoste.type}}<br />
                                        Heure de début : {{ repartition.idPoste.heureDebut|date('H:i', "Europe/Paris") }}<br />
                                        Heure de fin : {{ repartition.idPoste.heureFin|date('H:i', "Europe/Paris") }}
                                </div>
                        </li>
                {% endfor %}
                </ul>
        {% else %}
                <p>L'organisateur ne vous a pas encore affecté à un poste.</p>
        {% endif %}

        <h2>Mes préférences de postes</h2>
        {% if all_prefpostes %}
                <ul id="sortlist" 
                        data-token= {{ token }}
                        data-id-raid= {{ raid.id }}
                        data-id-user= {{ user.idUser }}
                        class="list-group ul_style">
                {% for preference in all_prefpostes %}
                        <li 
                                data-id-poste = {{ preference.idPoste.id }}
                                data-id-benevole = {{ preference.idBenevole.id }}
                                class="sortable_item">{{ preference.idPoste.type }}
                               <a href={{ path('gestion_preferences_remove', {
                                       'id_raid' : preference.idBenevole.idRaid.id,
                                       'id_preference': preference.id}
                                )}}>Retirer</a>
                        </li>
                {% endfor %}
                </ul>
        {% else %}
                <p>Vous n'avez pas renseigné de préférence pour un poste.</p>
        {% endif %}
        <a href="{{ path('ajouter_preference', {'id_raid': raid.id}) }}">Ajouter une préférence</a>
</div>

<script type="text/javascript">

        var token = $("#sortlist").data('token');
        var id_raid = $("#sortlist").data('idRaid');
        var id_user = $("#sortlist").data('idUser');

        $("#sortlist").sortable( {
                accept : 'sortable_item',
                axis : 'vertically',
                opacity : 0.6,
                change: function(event, ui){
                        
                        let all_prefs = this.getElementsByTagName("li");
                        $.when(supprimerPreferences(id_raid, id_user).done(function(data, textStatus, jqXHR){
                                let count = 1;

                                for(let i = 0; i < all_prefs.length; i++){
                                        let id_poste = $(all_prefs[i]).data('idPoste');
                                        let id_benevole = $(all_prefs[i]).data('idBenevole');
                                        let priority = i+1;
                                        
                                        let preference = {
                                                "idPoste": id_poste,
                                                "idBenevole": id_benevole,
                                                "priority": priority,
                                        }
                                        
                                        creerPreference(preference);
                                }
                        }));
                }
        });

        function supprimerPreferences(id_raid, id_user){
                return $.ajax({
                        url: 'http://raidtracker.ddns.net/raid_tracker_api/web/app.php/api/prefpostes/raids/' + id_raid + '/users/'+ id_user,  
                        type: 'DELETE',
                        dataType: 'json',
                        headers: {"X-Auth-Token": token},
                        success: function(data){
                                console.log('Preferences supprimées avec succès!');
                        },
                        error: function (xhr, textStatus, errorThrown) {  
                                console.log(xhr.responseJSON.message);  
                        }
                });
        }

        function creerPreference(preference){
                return $.ajax({
                        url: 'http://raidtracker.ddns.net/raid_tracker_api/web/app.php/api/prefpostes',  
                        type: 'POST',
                        dataType: 'json',
                        headers: {"X-Auth-Token": token},
                        data: { ...preference },
                        success: function(data){
                                console.log('Preference ajoutée avec succès!');
                        },
                        error: function (xhr, textStatus, errorThrown) {  
                                console.log(xhr.responseJSON.message);  
                        }
                });
        }
</script>
{% endblock %}
