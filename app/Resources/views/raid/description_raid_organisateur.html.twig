{% extends 'base.html.twig' %}

{% block content %}

<div class="container">
    {% if est_organisateur %}
        <h1>Edition du RAID : {{raid.nom}}</h1>
        <h2>Liste des parcours</h2>


        <script type="text/javascript">
            var token = $('.container').data('token');
            //let raid = $('.container').data('raid');
            var tous_points_traces;
            var tab_traces_points = [];

            $(".btn-primary").click( function() {
                var id_parcours = this.getAttribute('id');
                
                $.when(recuperer_points_traces(id_parcours).done(function(data, textStatus, jqXHR){
                    let length_tab_traces_points = tab_traces_points.length;

                    for (let i = 0 ; i < length_tab_traces_points ; i++) {
                        function downloadableCSV(rows) {
                            var geojson = {
                                "name":"NewFeatureType",
                                "type":"FeatureCollection",
                                "features":[{
                                    "type":"Feature",
                                    "geometry":{
                                        "type":"LineString",
                                        "coordinates":[]
                                    },
                                    "properties":null
                                }]
                            };
  
                            rows.forEach(function(element) {
                                var lat = element.lat;
                                var lon = element.lon;
                                geojson.features[0].geometry.coordinates.push([lon, lat]);
                            })

                            var blob = new File([JSON.stringify(geojson)], {
                                type: "text/plain;charset=utf-8"
                            });

                            saveAs(blob, "test.geojson");

                            //return encodeURI(content);
                        }
                        downloadableCSV(tab_traces_points[i]);
                    }
                }));
            });

            function recuperer_points_traces(id){
                return $.ajax({  
                    url: 'http://raidtracker.ddns.net/raid_tracker_api/web/app.php/api/points/parcours/'+id,  
                    type: 'GET',
                    dataType: 'json',  
                    headers: {"X-Auth-Token": token},
                    success: function(data){
                        let data_length = data.length;
                        let tab_trace_points = [];
                        let tab_point = [];
                        let j = 0;
                        tab_traces_points = [];

                        for (let i = 0 ; i < data_length ; i++) {
                            tab_point = [];
                            tab_point["lon"] = data[i].lon;
                            tab_point["lat"] = data[i].lat;
                            tab_trace_points.push(tab_point);

                            if(data[i].type == 2) {
                                tab_traces_points[j] = tab_trace_points;
                                tab_trace_points = [];
                                j++;
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {  
                            console.log('Erreur lors de la récupération des points des tracés');  
                        }
                    });
                }
            </script>
        {% else %}
            <p>Aucun parcours dans ce raid</p>
        {% endif %}
    
        <a href= {{ path('create_parcours',{'id':raid.id}) }}>
            Créer un nouveau parcours
            <i class="fas fa-3x fa-plus-circle"></i>
        </a>
    
        <h2>Attribuer un poste à un bénévole</h2>
        <ul class="list-group">
            {% for prefposte in all_prefpostes %}
                <li class="list-group-item text-left">
                    {{ prefposte.idBenevole.idUser.username}} souhaiterait le poste
                    {{ prefposte.idPoste.type}} de
                    {{ prefposte.idPoste.heureDebut|date('H:i', "Europe/Paris") }} à
                    {{ prefposte.idPoste.heureFin|date('H:i', "Europe/Paris")}}
    
                    <a href= {{ path('choix_bene_defi', {'idbenevole': prefposte.idBenevole.id, 'idposte':prefposte.idPoste.id }) }}>
                        Attribuer le poste à ce bénévole
                    </a>
                </li>
            {% endfor %}
        </ul>
    
        <h2>Bénévoles déjà affectés</h2>
         <ul class="list-group">
            {% for repartition in all_repartitions %}
                <li class="list-group-item text-left">
                    {{ repartition.idBenevole.idUser.username }} - 
                    {{ repartition.idPoste.type }}
                </li>
            {% endfor %}
        </ul>
    {% else %}
        <div class="alert alert-danger" role="alert">
            Vous n'êtes pas organisateur de ce RAID.<br>
            Merci de vous adresser à un des organisateurs pour accéder à cette page
        </div>
    {% endif %}
</div>

{% endblock %}